/* nwds.js start */
// String trunc() method for truncation with ellipsis

String.prototype.trunc = String.prototype.trunc ||
    function (n) {
        return (this.length > n) ? this.substr(0, n - 3) + '...' : this;
    };

var ncbi = ncbi || {};
ncbi.nwds = ncbi.nwds || {};
/* following are utility functions which can be used by any JavaScript files in this app */
ncbi.nwds.utils = ncbi.nwds.utils || {};
/* Utility helper function to get cookie value by passing name of cookie */
ncbi.nwds.utils.getCookie = function(name)
{
    var re = new RegExp(name + "=([^;]+)");
    var value = re.exec(document.cookie);
    return (value != null) ? decodeURI(value[1]) : null;
}
/*
 Turn a dom element (div...) to be an overlay object that stay on top of body element
 */
ncbi.nwds.Overlay = function () {
    var _this = this;
    this.$body = jQuery('body');
    this.show = function () {
        this.$element = jQuery('<div id="ncbi-overlay"></div>');
        this.$element.css({
            'background': '#000000',
            'opacity': .1,
            'visibility': 'inherit !important',
            'cursor': 'pointer',
            'position': 'fixed',
            'top': 0,
            'right': 0,
            'bottom': 0,
            'left': 0,
            '-webkit-transition': 'all 0.2s ease-in-out',
            'transition': 'all 0.2s ease-in-out',
            'z-index': 8000
        });

        this.$body.prepend(this.$element);
        this.$element.show();

        this.$element.click(function () {
            _this.hide();
        });
    };

    this.hide = function () {
        if (typeof this.$element !== 'undefined') {
            jQuery.event.trigger('overlay-dismissed');
            this.$element.remove();
        }
    };

    jQuery(document).keyup(function (e) {
        var ESC_KEY = 27;
        if (e.keyCode == ESC_KEY) {
            _this.hide();
        }
    });

};
/* nwds.js end */

/* ncbipopup.js start */
(function ($) {
    /*
    A jquery plug-in in that turns
    <button aria-controls="popupmenu">show menu</button>
    <div id="popupmenu" aria-hidden="true" aria-labelledby="IDREF">...</div> into a pop-up menu
    for example:
        $('#topnav-btn').ncbipopup();
        $('#account_info').ncbipopup({showOverlay: false});
    */

    $.fn.ncbipopup = function (options) {

        var settings = $.extend({}, $.fn.ncbipopup.defaults, options);
        return this.each(function () {

            var $popupTrigger = $(this);
            var overlay = null;

            // add aria attributes
            $popupTrigger.attr('aria-haspopup', 'true');

            // find the pop-up menu
            var $ariaControl = $('#' + $popupTrigger.attr('aria-controls'));
            if (!$ariaControl.length) {
                throw ('ncbipopup: No elements matched #' + $popupTrigger.attr('aria-controls'))
            }

            // set up overlay
            if (settings.showOverlay) {
                overlay = new ncbi.nwds.Overlay();
                $(document).on('overlay-dismissed', function (event) {
                    hidePopup($ariaControl);
                });

            }

            // initialize the pop-up (show/hide) based on the html
            init($ariaControl);

            // click event for the menu
            $popupTrigger.on('click', function (e) {
                if (getAttributeValue($ariaControl, 'aria-hidden') === 'true') {
                    showPopup($ariaControl);
                    if (settings.showOverlay === true) {
                        overlay.show();
                    }
                } else {
                    hidePopup($ariaControl);
                    if (settings.showOverlay === true) {
                        overlay.hide();
                    }
                }
                e.stopPropagation();
            });

            $ariaControl.on('click', '.ncbi-close-button', function (e) {
                if (settings.showOverlay === true) {
                    // there is no need to call hidePopup(), because the "overlay-dismissed" will take care of that
                    overlay.hide();
                } else {
                    hidePopup($ariaControl);
                }
                $popupTrigger.focus();
                e.stopPropagation();
            });

            // catch tab-key and shift + tab so that the focus will never leave the pop-up
            focusTrap($ariaControl, {
                onKeyESC: function (event) {
                    $ariaControl.find('.ncbi-close-button').trigger('click');
                    //if the user opens this pop-up menu by clicking the button, then send the focus back to the button
                    $popupTrigger.focus();
                    event.stopPropagation();
                }
            });

            function init($ariaControl) {
                // the dialog/pop-up need to be focusable
                $ariaControl.attr('tabindex', -1);

                // if showOverlay: true, then it's a modal dialog/pop-up
                if (settings.showOverlay) {
                    $ariaControl.attr('aria-modal', 'true')
                }

                if (getAttributeValue($ariaControl, 'aria-hidden') === 'true') {
                    hidePopup($ariaControl);
                } else {
                    showPopup($ariaControl);
                }
            }

            function hidePopup($ariaControl) {
                $ariaControl
                    .hide()
                    .attr('aria-hidden', 'true');

                $popupTrigger.attr('aria-expanded', 'false');

                // call the callback
                settings.onHidden.call();
            }

            function showPopup($ariaControl) {
                $ariaControl
                    .show()
                    .attr('aria-hidden', 'false');

                $popupTrigger.attr('aria-expanded', 'true');

                // when pop-up shows, the focus should be on the x button
                // https://www.marcozehe.de/2015/02/05/advanced-aria-tip-2-accessible-modal-dialogs/
                $ariaControl.find('.ncbi-close-button').focus();

                // call the callback
                settings.onShown.call();
            }

        });

        function getAttributeValue($elem, attrName) {
            return typeof $elem.attr(attrName) === 'undefined' ? '' : $elem.attr(attrName);
        }
    };


    $.fn.ncbipopup.defaults = {
        showOverlay: true,
        onHidden: function () {
        },
        onShown: function () {
        }
    };

    /*
    // this should be moved to its own module
    focusTrap($container, {
        onKeyTab: function(e) {},
        onKeyESC: function(e){}
    });
     */
    var focusTrap = function ($container, options) {

        var settings = $.extend({}, {
            onKeyTab: function (e) {
            },
            onKeyESC: function (e) {
            }
        }, options);

        // jQuery formatted selector to search for focusable items
        var focusableElementsString = "a[href], area[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), iframe, object, embed, *[tabindex], *[contenteditable]";

        var KEY = {TAB: 9, SHIFT: 16, ESC: 27};

        // keydown seems more reliable than 'keyup'
        // for example, a user can keep holding down the tab key
        $container.on('keydown', function (event) {

            // implemented based on https://www.marcozehe.de/2015/02/05/advanced-aria-tip-2-accessible-modal-dialogs/
            if (event.keyCode === KEY.TAB) {

                // get list of all children elements in given object
                var children = $container.find('*');

                // get list of focusable items
                var focusableItems = children.filter(focusableElementsString).filter(':visible');

                // get currently focused item
                var focusedItem = $(document.activeElement);

                // get the number of focusable items
                var numberOfFocusableItems = focusableItems.length;

                var focusedItemIndex = focusableItems.index(focusedItem);

                if (!event.shiftKey && (focusedItemIndex == numberOfFocusableItems - 1)) {
                    focusableItems.get(0).focus();
                    event.preventDefault();
                }
                if (event.shiftKey && focusedItemIndex == 0) {
                    focusableItems.get(numberOfFocusableItems - 1).focus();
                    event.preventDefault();
                }
                settings.onKeyTab.call(this, event);
            }
        });

        
        $(document).on('keydown', function (event) {
            if (event.keyCode == KEY.ESC) {
                settings.onKeyESC.call(this, event);
            }
        });

    };

})(jQuery);
/* ncbipopup.js end */

/* header.js start */
(function () {
    $(function () {
        // URLs for My NCBI and Global Alerts should ideally be unqualified so that they go to the correct
        // region (www, test, dev) because the behavior or content differs.  However, for apps that are not
        // below www (e.g. submit.ncbi), it will need to be fully qualified to www.ncbi.nlm.nih.gov. To do
        // this, create a global JavaScript variable named ncbiBaseUrl:
        //
        //     var ncbiBaseUrl = "https://www.ncbi.nlm.nih.gov";
        //
        if (typeof ncbiBaseUrl !== 'undefined') {
            var ncbiHeadLinks = document.getElementsByClassName('set-base-url');
            for (var i = 0; i < ncbiHeadLinks.length; i++) {
                ncbiHeadLinks[i].href = ncbiBaseUrl + ncbiHeadLinks[i].getAttribute("href");
            }
        }
    });
})(jQuery);

/*(function () {
    $(function () {
        // By default the login button points to production login URL
        // To use dev login URL, apps need to set Global variable `useDevLoginURL` to true
        if (typeof useDevLoginURL !== 'undefined' && useDevLoginURL === true) {
            var loginLink = document.getElementById('account_login');
            loginLink.href = 'https://account-dev.ncbi.nlm.nih.gov';
        }
    });
})(jQuery);*/


/*(function () {
    $(function () {
        // Feature flag for "An official website of the United States government" header
        // To have the header added, apps need to set Global variable `useOfficialGovtHeader` to true
        if (typeof useOfficialGovtHeader !== 'undefined' && useOfficialGovtHeader === true) {
            var banners = document.getElementsByClassName('usa-banner');
            if(banners.length > 0){
                // by default for feature flag, banner has a style attribute with display: none
                // this removes that style attribute
                var banner = banners[0];
                banner.style.display = null;
            }
        }
    });
})(jQuery);*/

(function ($) {
    $(function () {
        // add a back_url to a#myncbi's href
        var acctLinks = document.querySelectorAll('#account_login, #account_logout');
        for (var i = 0; i < acctLinks.length; i++) {
            acctLinks[i].href = acctLinks[i].getAttribute("href") + '?back_url=' + encodeURIComponent(document.location.href);
        }

        var cubby = getCookie('WebCubbyUser');
        cubby = decodeURIComponent(decodeURIComponent(cubby));

        var username = getUser(cubby);

        if (username) {
            $('#uname_short').text(username.trunc(20));
            $('#uname_long').text(username.trunc(40));
            $('#account_login').hide();
            $('#account_info').show();
        }
        else {
            $('#account_login').show();
            $('#account_info').hide();
        }


        function getUser(c) {

            var re_logd = /.*logged-in\=(\w*);.*/;
            var re_user = /.*my-name\=([\w|\-|\.|\ |\@|\+]*);.*/;
            if (c) {
                var l = re_logd.exec(c);
                if (l && l[1] && l[1] === 'true') {
                    var u = re_user.exec(c);
                    if (u && u[1]) {
                        return u[1];
                    }
                }
            }
            return '';
        }


        function getCookie(f) {
            var e;
            if (window.sessionStorage) {
                try {
                    e = sessionStorage.getItem(f) || '';
                } catch (g) {
                    e = '';
                }
                if (e.length > 0) {
                    return e;
                }
            }
            if (document.cookie.length > 0) {
                e = document.cookie.indexOf(f + '=');
                if (e !== -1) {
                    e = e + f.length + 1;
                    f = document.cookie.indexOf(';', e);
                    if (f === -1) {
                        f = document.cookie.length;
                    }
                    return unescape(document.cookie.substring(e, f))
                }
            }
            return '';
        }

        var $popupMenu = $('#account_info').ncbipopup();

    });

})(jQuery);

/* Follow code to toggle Banner */
(function ($) {
	$(function () {
		var head_bnr = $(".usa-banner header.usa-banner-header");
		var btn_bnr = $(".usa-banner button.non-usa-accordion-button.usa-banner-button"); 
		var acr_bnr = $(".usa-banner div.usa-banner-content.usa-accordion-content");
		btn_bnr.on("click", function(e) {
			head_bnr.toggleClass("usa-banner-header-expanded");
			var aria_val = $(this).attr("aria-expanded");
			var opp_aria_val = (aria_val === "false") ? "true" : "false";
			$(this).attr("aria-expanded", opp_aria_val);
			acr_bnr.attr("aria-hidden", aria_val);
			e.stopPropagation();
		});
	});
})(jQuery);

/*(function () {
    $(function () {

        if (typeof alertsUrl === 'undefined') {
            console.log('Note: alertsUrl is undefined, hence the NCBI Global Alert system will not work for this page');
            ncbi.sg.ping({'jsevent': 'warning', 'warning': 'alertsUrl is undefined'});
        }
        else {
            jQuery.getScript(alertsUrl, function () {
                galert(['.custom-alerts-placeholder', '.ncbi-alerts-placeholder', 'header.ncbi-header', 'body > *:nth-child(1)'])
            });
        }

    });
})(jQuery);*/
/* header.js end */

;(function() {
	
	var signin = document.getElementById("sign_in");
	if(typeof signin != 'undefined'  && signin){
	    signin.href = signin.href + "?back_url=" + encodeURIComponent(window.location);
	}

	var signout = document.getElementById('sign_out');
	if(typeof signout != 'undefined' && signout){
	    signout.href = signout.href + "?back_url=" + encodeURIComponent(window.location);
	}

	function getCookie(cookie_name) {
	    var start_pos = document.cookie.indexOf(cookie_name + "="); //start cookie name
	    if (start_pos != -1) {
	        start_pos = start_pos + cookie_name.length+1; //start cookie value                
	        var end_pos = document.cookie.indexOf(";", start_pos);
	        if (end_pos == -1) {
	            end_pos = document.cookie.length;
	        }
	        return decodeURIComponent(document.cookie.substring(start_pos, end_pos)); 
	    }
	    else {
	        return "";
	    }
	}        

	var c = getCookie('WebCubbyUser');
	c = decodeURIComponent(decodeURIComponent(c));
	lre = /.*logged-in\=(\w*);.*/; 
	ure = /.*my-name\=([\w|\-|\.|\ |\@|\+]*);.*/;
	plus = /\+/gi;

	if(c){ 
	    l = lre.exec( c );
	    if(l && l[1] && l[1] === 'true' ) {
	        u = ure.exec( c );
	        if(u && u[1]){ 
	            var myncbi_username = document.getElementById("myncbiusername");
	            var uname = document.getElementById('mnu');
	            if (uname) {
	                if (typeof uname != 'undefined') {
	                    uname.appendChild(document.createTextNode(u[1].replace(plus, ' ')));
	                    myncbi_username.style.display = "inline";
	                
	                    var signin = document.getElementById("sign_in");
	                    signin.style.display = "none";                                          
	                
	                    var signout = document.getElementById("sign_out");
	                    signout.style.display = "inline";
	                    
	                    var myncbi = document.getElementById('myncbi');
	                    myncbi.style.display='inline';                                                      
	                }
	            }
	        }
	    }
	} else {
		// NWS-5489: removed iFrame and instead put relative sign-in link
		var elPh = document.querySelector(".myncbi");
		if (!elPh) return;
		elPh.innerHTML = "";
		var elSignInLnk = document.createElement("a");
		var hrefVal = "/account/?back_url=" + encodeURIComponent(window.location);
		elSignInLnk.setAttribute("href", hrefVal);
		elSignInLnk.setAttribute("id", "sign_in");
		elSignInLnk.innerText = "Sign in to NCBI";
		elPh.appendChild(elSignInLnk);
	}
})();

/*(function( $ ){ 
    $( function() {
        if (typeof $.fn.ncbipopper == "function") {
            $('#info .external').each( function(){
                var $this = $( this );
                var popper = $this;
                popper.ncbipopper({
                    destSelector: '#external-disclaimer',
                    isDestElementCloseClick: false,
                    openAnimation: 'none', 
                    closeAnimation: 'none', 
                    isTriggerElementCloseClick: false,
                    triggerPosition: 'bottom center', 
                    destPosition: 'top center', 
                    hasArrow: true, 
                    arrowDirection: 'top'
                });
            }); 
        }
    });
})( jQuery );*/

if(typeof jQuery !== 'undefined' && jQuery.ui){
    var version = jQuery.ui.jig.version;
    var pieces = version.split(".");
    if(pieces[0] >= 1 && pieces[1] >= 11){
        if(pieces[1] == 11 && pieces[2] && pieces[3] >= 2){
            jQuery("#sign_in").click(function(e){        
                if(typeof jQuery.ui.jig.requiresLogin !== 'undefined'){
                    e.preventDefault();
                    jQuery.ui.jig.requiresLogin();
                }
            });
        }
    }
}
// Global Alerts - new
if (typeof(jQuery) != 'undefined') {
    jQuery.getScript("/core/alerts/alerts.js", function () {
        galert(['.custom-alerts-placeholder', '.ncbi-alerts-placeholder', 'div.nav_and_browser', 'div.header', '#universal_header', 'body > *:nth-child(1)'])
    });
}

